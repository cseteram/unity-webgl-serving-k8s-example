name: Build project and deploy

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build-and-push-image:
    name: Build and push the image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.ref }}
        uses: actions/checkout@v3
      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      - name: Get runner's uid and gid
        id: runner-info
        run: |
          echo "uid=$(id -u)" >> $GITHUB_OUTPUT
          echo "gid=$(id -g)" >> $GITHUB_OUTPUT
      - name: Build
        uses: game-ci/unity-builder@v2.0.4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          chownFilesTo: ${{ steps.runner-info.outputs.uid }}:${{ steps.runner-info.outputs.gid }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Build-WebGL
          path: build/WebGL
          retention-days: 14
      - name: Sign in to the GitHub container registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Docker build and push
        working-directory: build/WebGL/WebGL
        env:
          IMAGE_NAME: ghcr.io/cseteram/unity-webgl-nginx:latest
        run: |
          cp ${{ github.workspace }}/Dockerfiles/WebGL.Dockerfile Dockerfile
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
